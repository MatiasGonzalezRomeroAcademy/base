name: master-build

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn clean compile install -DskipTests --file pom.xml
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run unit tests
        run: mvn test --file pom.xml
  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run sonar
        run: mvn clean package sonar:sonar -Dsonar.host.url=${{secrets.SONAR_HOST}} -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}} -Dsonar.login=${{secrets.SONAR_TOKEN}} -Dsonar.scanner.force-deprecated-java-version=true
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  deploy: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to Heroku
        run: heroku login 
        env: 
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
      - name: Clear buildpack
        run: heroku buildpacks:clear --app academy-base-project
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
      - name: Install plugin
        run: heroku plugins:install heroku-cli-deploy
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
      - name: Deploy
        run: heroku deploy:war --war ./target --app academy-base-project
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
